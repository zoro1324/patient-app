# Generated by Django 5.1.3 on 2025-07-14 15:37

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ai_chat', '0007_alter_taskpermission_opened_at'),
    ]

    operations = [
        migrations.AlterField(
            model_name='studentaipatientprogress',
            name='current_attempt_number',
            field=models.PositiveIntegerField(default=1, help_text='The current attempt number for the active task. This corresponds to an entry in StudentTaskAttempt.'),
        ),
        migrations.AlterField(
            model_name='studentaipatientprogress',
            name='current_doctor_score_for_task',
            field=models.IntegerField(default=0, help_text="Student's performance score for the current attempt on the current task (0-100). Resets per task attempt.", validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AlterField(
            model_name='studentaipatientprogress',
            name='current_task',
            field=models.ForeignKey(blank=True, help_text='The current task the student is on for this AI patient. Null if all tasks completed or no task started.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai_chat.aipatienttask'),
        ),
        migrations.CreateModel(
            name='StudentTaskAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_number', models.PositiveIntegerField(help_text='The sequential number of this attempt for the given student and task.')),
                ('final_score', models.IntegerField(default=0, help_text='The final score achieved for this attempt (0-100).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_completed', models.BooleanField(default=False, help_text='True if the task completion criteria were met in this attempt.')),
                ('start_time', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this attempt started.')),
                ('end_time', models.DateTimeField(blank=True, help_text='Timestamp when this attempt ended (e.g., task completed, or new attempt started).', null=True)),
                ('patient_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_attempts_patient', to='ai_chat.aipatientprofile')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_attempts', to='ai_chat.student')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='ai_chat.aipatienttask')),
            ],
            options={
                'verbose_name': 'Student Task Attempt',
                'verbose_name_plural': 'Student Task Attempts',
                'ordering': ['start_time'],
                'unique_together': {('student', 'task', 'attempt_number')},
            },
        ),
    ]
